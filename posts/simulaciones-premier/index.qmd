---
title: "Simulando el Premier de Primer Bloque"
date: "07-12-2024"
categories: ["simulaci√≥n", "Torneo Premier"]
description: "Al torneo Premier se presentaron decenas de jugadores ol√≠mpicos, consiguiendo ganar el torneo. ¬øQu√© pasar√≠a si se repitiera el Premier unas 10000 veces?"
image: premier.jpg
---

El pasado S√°bado 06 de Julio se celebr√≥ el [Torneo Premier de Primer Bloque 2024](https://blog.myl.cl/torneo-premier-pb-sabado-06-de-julio-de-2024/), en el que se batieron a duelo m√°s de 360 jugadores, entre los que estaban los mejores del pa√≠s, destacando Jean Valdivieso (ol√≠mpico), campe√≥n del torneo, y √Ålvaro P√©rez (tit√°n), subcampe√≥n y campe√≥n nacional. Bastante se ha hablado de la asombrosa coincidencia (¬ø?) que ambos finalistas del campeonato nacional se reencontraran en la final del segundo torneo m√°s importante que va del a√±o, pero aqu√≠ daremos una lectura diferente a los resultados del Premier, una lectura estad√≠stica üòé.

```{r packages}
library(tidyverse)
```

```{r wd}
#| eval: false
setwd(paste0(getwd(), "/posts/simulaciones-premier"))
```

```{r ggplot-theme}
theme_set(theme_minimal(base_size = 18, base_family = "Roboto"))
```

```{r import-data}
champions <- read_csv("champions.csv")
final_table <- read_csv("final_table.csv")
top_32 <- read_csv("top_32.csv")
players <- read_csv("players.csv")
```

```{r ediciones}
edition <- c(
  rep("Espada Sagrada", 3),
  rep("Hel√©nica", 3),
  rep("Hijos de Daana", 3),
  rep("Dominios de Ra", 3)
)

raza <- unique(players$raza)

edition_df <- tibble(raza, edition)
```

## Popularidad de razas

Es claro para todos que el Premier fue dominado por la participaci√≥n de la raza ol√≠mpico, seguida desde lejos por el tit√°n y el faerie (goblin), mientras que los perdedores en popularidad son las razas "verdes y amarillas".

```{r}
#| fig-cap: "Fuente de los datos: [mazos.cl](https://www.youtube.com/watch?v=SNa8hcqj40c&ab_channel=MazosCL)."
#| cap-location: margin

participation <- 
  players |>
  count(raza) |> 
  left_join(edition_df, join_by(raza)) |> 
  mutate(
    raza = fct_reorder(raza, n),
    edition = fct_relevel(edition, "Espada Sagrada", "Hel√©nica", "Hijos de Daana", "Dominios de Ra"),
    pct = paste0(round(100 * n / sum(n), 1), "%")
  )

participation |> 
  ggplot(aes(n, raza, fill = edition)) +
  geom_col(alpha = 0.8) +
  geom_text(aes(
    label = pct,
    color = n > 20,
    hjust = if_else(n > 20, 1.2, -0.2)
  ), size = 8, fontface = "bold", family = "Roboto",
  show.legend = FALSE) +
  scale_fill_manual(values = c("dodgerblue2", "firebrick4", "darkgreen", "gold3")) +
  scale_color_manual(values = c("black", "white")) +
  labs(
    x = "n¬∞ de jugadores",
    y = NULL,
    fill = NULL
  ) +
  theme(
    panel.grid.minor = element_blank(),
    panel.grid.major.y = element_blank(),
    legend.text = element_text(size = 16),
    legend.spacing.y = unit(2, "cm")
  )
```

La evidente popularidad del ol√≠mpico se puede atribuir a los recientes [kits raciales](https://casamyl.cl/collections/preventa-primer-bloque), que beneficiaron la raza con 3 buenas cartas nuevas, y al estilo de juego con Afrodita, un aliado de la √©poca Salo que abre la posibilidad de tener turnos muy poderosos o muy malos.

::: columns
::: {.column width="57%"}
![Cartas nuevas de Kit Racial Ol√≠mpico](olimpicos.jpg)
:::

::: {.column width="8%"}
:::

::: {.column width="35%"}
![Afrodita](afrodita.jpg)
:::
:::

La raza ol√≠mpicos fue tan popular que me genera la duda: ¬øacaso el ol√≠mpico gan√≥ porque "atac√≥ en manada" o porque es una raza muy fuerte? Despu√©s de todo, por muy mala que sea una raza, si 1 de cada 4 jugadores es ol√≠mpico entonces de vez en cuando se espera que ganen, ¬øo no? Me decid√≠ a investigar en esta √∫ltima l√≠nea y dise√±√© un estudio de simulaci√≥n, en donde **repito el Premier 10.000 veces!!**.

## Simulaci√≥n

El objetivo del estudio es descubrir con qu√© frecuencia se repite la final del Premier de Primer Bloque, en otras palabras, encontrar *la probabilidad* de que el ol√≠mpico y el tit√°n disputen la corona del torneo. Como m√©todo de simulaci√≥n apliqu√© [Montecarlo](https://es.wikipedia.org/wiki/M%C3%A9todo_de_Montecarlo), un m√©todo usado para aproximar par√°metros de procesos complejos, como la probabilidad de victoria ol√≠mpica en el Premier. Hubiera sido ideal desarrollar la simulaci√≥n de forma fiel a las bases, pero estas escatiman en detalles, por ejemplo no es claro cu√°l es el orden inicial de los jugadores en la etapa suiza. Para complementar los huecos us√© mi conocimiento del Juego Organizado y del [Sistema Suizo](https://es.wikipedia.org/wiki/Sistema_suizo) de torneos, con el que estoy familiarizado por el ajedrez competitivo.

::: column-margin
El sistema suizo se diferencia del knockout en que cada jugador juega un n√∫mero fijo de enfrentamientos. En la primera ronda los enfrentamientos pueden ser aleatorios o regidos por un criterio, como ranking nacional. A partir de la segunda ronda, los jugadores que ganaron sus enfrentamientos se enfrentan entre s√≠ y lo mismo aplica para quienes empatan y pierden. A modo ilustrativo, en la ronda 3 del Premier el sistema suizo emparejar√° en la medida de lo posible a los jugadores con 6 puntos entre s√≠, despu√©s a los que tienen 4, 3 y as√≠ hasta emparejar a todos los jugadores. Si la cantidad de jugadores es impar, al jugador con menos puntaje se le empareja con *Bye*, lo que implica una victoria por la diferencia m√°xima a favor del jugador.
:::

#### El proceso de simulaci√≥n consta de estas etapas:

1.  Crear una lista de 376 jugadores con la misma distribuci√≥n de razas del Premier (99 ol√≠mpicos, 51 titanes, etc.).

2.  Para cada una de las 10.000 simulaciones:

```{=html}
<!-- -->
```
i.  Crear 2 zonas de juego, A y B, cada una con la mitad de jugadores seleccionados al azar.

ii. Jugar un torneo suizo de 5 rondas en cada zona. Los enfrentamientos se juegan al mejor de 3, pudiendo ser los resultados 1-0, 1-1, 2-0, 2-1. Se asignan 3 puntos por ganar un enfrentamiento individual, 1 punto por empatar y 0 puntos por perder.

iii. Escoger a los 16 mejores puntajes por zona y unirlos en un torneo Knockout o de eliminaci√≥n directa, en donde el primer lugar de la zona A juega contra el √∫ltimo lugar de la zona B, el segundo de la zona A juega contra el pen√∫ltimo de la zona B, etc.

iv. De los 32 jugadores iniciales, quedar√° solamente 1, el campe√≥n. Se toma nota de su raza y finaliza el torneo.

v.  Repetir.

![Formato Knockout](knockout.jpg)

3.  Despu√©s de 10.000 simulaciones de torneo habr√° 10.000 razas campeonas. Se usan los datos sint√©ticos generados para estimar probabilidades de eventos.

Para desarrollar la simulaci√≥n us√© el lenguaje de programaci√≥n `R`; puedes ver y descargar el c√≥digo [desde su repositorio en github](https://github.com/DiabbZegpi/mercaderes/blob/master/posts/simulaciones-premier/simulations.R).

## Titanomaquia

El an√°lisis que sigue debe entenderse bajo la premisa de qu√© pasar√≠a si todas las razas tuvieran chances equivalentes de derrotarse entre s√≠.

#### ¬øQu√© tan probable es una final de Ol√≠mpico vs Tit√°n?

La final del Premier de PB nos presenta una [Titanomaquia](https://es.wikipedia.org/wiki/Titanomaquia) √©pica para disputar al ganador del torneo, entre Jean *Zeus* Valdivieso y √Ålvaro *Cronos* P√©rez, en la que el Pante√≥n griego result√≥ victorioso. Pero, si repiti√©ramos el Premier 10.000 veces, ¬øcon qu√© frecuencia presenciar√≠amos la Titanomaquia?

```{r}
#| fig-width: 10
#| fig-height: 10
finals <- 
  final_table |> 
  filter(round == 5) |> 
  select(simul, winner, loser,simul) |> 
  left_join(players |> select(id, raza), join_by(winner == id)) |> 
  rename(raza_winner = raza) |> 
  left_join(players |> select(id, raza), join_by(loser == id)) |> 
  rename(raza_loser = raza) |> 
  count(raza_winner, raza_loser)

paste_razas <- function(x, y) {
  paste(sort(c(x, y)), collapse = " ")
}

raza_fct <- 
  finals |> 
  count(raza_winner, wt = n) |> 
  mutate(raza = fct_reorder(raza_winner, n)) |> 
  pull(raza)

finals |>
  complete(raza_winner, raza_loser, fill = list(n = 0)) |>
  rowwise() |> 
  mutate(flag = paste_razas(raza_winner, raza_loser)) |> 
  ungroup() |> 
  group_by(flag) |> 
  mutate(nn = sum(n)) |> 
  ungroup() |> 
  mutate(
    raza_winner = fct_relevel(raza_winner, levels(raza_fct)),
    raza_loser = fct_relevel(raza_loser, levels(raza_fct)),
  ) |> 
  arrange(raza_winner, raza_loser) |> 
  distinct(flag, .keep_all = TRUE) |>
  ggplot(aes(raza_winner, fct_rev(raza_loser), fill = nn)) +
  geom_tile() +
  geom_text(aes(label = nn, color = between(nn, 120, 800)), size = 6) +
  coord_fixed(expand = FALSE) +
  scale_fill_distiller(name = "n¬∞ de finales", palette = "PuOr", na.value = "white", direction = -1, guide = "none") +
  scale_color_manual(values = c("white", "black"), guide = "none") +
  theme_void(base_size = 18, base_family = "Roboto") +
  theme(
    axis.text = element_text(),
    axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, margin = margin(t = 3)),
    axis.text.y = element_text(hjust = 1, margin = margin(r = 5)),
    axis.title = element_text(size = 24),
    legend.position = c(0.8, 0.8),
    legend.text = element_text(size = 18),
    legend.title = element_text(margin = margin(b = 10))
  ) +
  labs(
    x = NULL,
    y = NULL
  ) 

```

```{r}
olimpico_titan <- 
  finals |> 
  filter(
    (raza_winner == "Ol√≠mpico" | raza_loser == "Ol√≠mpico"),
    (raza_winner == "Tit√°n" | raza_loser == "Tit√°n")
  ) |> 
  summarize(n = sum(n)) |> 
  pull(n)

olimpico <- 
  finals |> 
  filter(if_any(starts_with("raza"), ~ .x == "Ol√≠mpico")) |> 
  summarize(n = sum(n)) |> 
  pull(n)

olimpico_champ <- 
  champions |> 
  count(race) |> 
  filter(race == "Ol√≠mpico") |> 
  pull(n)
```

Asombrosamente, la final entre ol√≠mpicos y titanes ocurre `r olimpico_titan` veces, que equivale al `r round(olimpico_titan/10000, 4) * 100`% de las simulaciones. Esto parece muy poco en comparaci√≥n a la cantidad de veces que el ol√≠mpico llega a la final, que es `r olimpico` o `r round(olimpico / 10000, 4) * 100`%, que asumiendo una probabilidad de victoria de 50% contra cualquier raza, nos da un total de `r round(olimpico_champ / 10000, 4) * 100`% de probabilidad de ser campe√≥n, lo que es m√°s que 1 de cada 3.

## De Top 32 a campe√≥n

Es obvio que si el top 32 de jugadores en la etapa suiza juegan todos con la misma raza, est√° garantizado que esa raza sea campeona. An√°logamente, si hay una raza que no pasa al top 32, entonces es imposible que resulte ser campeona.

Mientras m√°s jugadores jueguen con la misma raza, mejores son las posibilidades de que esta raza sea campeona, ¬øno es as√≠?, pero, ¬øcu√°nto mejora la probabilidad de ganar el torneo con cada jugador adicional de la misma raza que pasa al top?

Para contestar a esta pregunta utilizo el modelo estad√≠stico denominado [regresi√≥n log√≠stica](https://es.wikipedia.org/wiki/Regresi%C3%B3n_log%C3%ADstica), el que realiza un an√°lisis del tipo predictivo asociando una variable independiente o predictora (# de representantes de una raza) con una variable dependiente o respuesta (gan√≥ o no gan√≥ el torneo). Finalmente, el modelo log√≠stico tiene la forma

$$
\frac{P(\text{ganar el torneo})}{1-P(\text{ganar el torneo})} = e^{\beta_0 + \beta_1 x},
$$

donde el numerador $P(\text{ganar el torneo})$ es la probabilidad de una raza de ganar el torneo, mientras que el denominador es su rec√≠proco, la probabilidad que tiene la raza de no ganar el torneo. A esta raz√≥n o fracci√≥n se le conoce como *odds ratio*. Por otra parte, $x$ es la **cantidad de jugadores de una raza determinada que entraron al top 32**; $e$ es la funci√≥n exponencial; $\beta_0$ es el intercepto del modelo y $\beta_1$ es el efecto que tiene $x$ sobre el odds ratio. El intercepto se interpreta como lo que pasa si ning√∫n jugador de una raza determinada pasa al top 32, lo que implica que √©sa raza tiene una probabilidad de 0% de ganar. Las interpretaciones de $\beta_1$ y del error est√°ndar las dejaremos para m√°s adelante.

```{r}
to_champ <- 
  top_32 |> 
  count(simul, raza) |> 
  complete(simul, raza, fill = list(n = 0)) |> 
  left_join(
    champions |> 
      mutate(simul = row_number()) |> 
      select(-champ) |> 
      rename(champ = race),
    join_by(simul)
  ) |> 
  mutate(champ_bool = as.numeric(raza == champ)) |> 
  select(-simul)
  
library(gt)

model_results <- 
  glm(champ_bool ~ n, family = binomial, data = to_champ) |> 
  broom::tidy() |> 
  filter(term != "(Intercept)") |> 
  transmute(
    estimate,
    odds_ratio = exp(estimate),
    std.error
  ) |> 
  mutate(across(everything(), ~ round(.x, 4)))

model_results |> 
  gt() |> 
  cols_label(
    estimate ~ "\u03B2‚ÇÅ",
    odds_ratio ~ "Odds Ratio",
    std.error ~ "Error est√°ndar"
  ) |> 
  tab_header(
    title = md("**Resultados de regresi√≥n log√≠stica**"),
    subtitle = md("Modelo ajustado a *10000 simulaciones*")
  )
  # mutate(
  #   p_hat = n / sum(n),
  #   odds = p_hat / (1 - p_hat),
  #   odds_frac = MASS::fractions(round(odds, 3)) |> as.character(),
  #   numerator = str_match(odds_frac, "\\d+?(?=/)")[, 1],
  #   denominator = str_match(odds_frac, "/(\\d+)")[, 2]
  # )
```

¬°¬øC√≥mo se lee esto?! Primero que todo, no reportamos el intercepto porque asumimos que es un valor muy negativo y no es interesante. Segundo, $\beta_1$ de 0.3385 es dif√≠cil de interpretar porque est√° en escala logar√≠tmica. Por ello, tambi√©n se reporta el cambio en odds ratio $e^{\beta_1}$ de 1.4029. Aqu√≠ va una explicaci√≥n: por cada jugador adicional de una raza que pasa al top 32, el odds ratio (odds de ganar / odds de no ganar) cambia multiplicativamente en 1.4029.


Ejemplo: digamos que Ol√≠mpico tiene una probabilidad de ganar el torneo de 33%, porque es un mazo muy fuerte y tiene 9 representantes en el top 32 (¬°igual que en el Premier!). 

$$
\displaylines{
P(\text{ganar el torneo})_{\text{ol√≠mpico}} = 0.3347, \\
\text{Odds}_{\text{ol√≠mpico}} = \frac{0.3347}{1 - 0.3347} = 0.5032.
}
$$

Si tan s√≥lo 1 ol√≠mpico m√°s hubiera pasado al top, entonces los odds aumentan multiplicativamente, de la forma

$$
\text{nuevos Odds}_{\text{ol√≠mpico}} = 0.5032 \times 1.4029 = 0.7059.
$$

Con un poco de √°lgebra podemos despejar la nueva probabilidad de que el campe√≥n del torneo sea un ol√≠mpico, con 10 jugadores en el top en lugar de 9

$$
\text{nueva } P(\text{ganar el torneo})_{\text{ol√≠mpico}} = \frac{\text{nuevos Odds}_{\text{ol√≠mpico}}}{1 + \text{nuevos Odds}_{\text{ol√≠mpico}}} = 0.4138.
$$

Un s√≥lo jugador aument√≥ la probabilidad de la raza en aproximadamente 8%, pero este cambio no es siempre igual, porque depende de la cantidad inicial de jugadores de la raza en el top. Podemos usar el modelo log√≠stico para determinar la probabilidad de ganar el torneo para un n√∫mero arbitrario de jugadores en el top.

```{r}
#| fig-width: 9
#| fig-height: 9

to_champ |> 
  ggplot(aes(n, champ_bool)) +
  geom_rug(alpha = 0.3) +
  geom_smooth(formula = y ~ x, method = "glm", method.args = list(family = binomial), se = TRUE, color = "#E64833", linewidth = 1.5) +
  scale_y_continuous(labels = scales::label_percent()) +
  labs(
    x = "Cantidad de jugadores de una misma raza en el top 32",
    y = expression(P~"(ganar el torneo)")
  )
```

El grosor de las l√≠neas en el eje horizontal indican vagamente si cierto n√∫mero de jugadores con la misma raza es algo frecuente de ver, por ejemplo, en 10000 simulaciones ni una sola vez hubo 20 ni m√°s de 21 jugadores con la misma raza en el top 32. Lo √∫ltimo que hay por explicar es el error est√°ndar, que es un indicador de la incertidumbre del c√°lculo de $\beta_1$ y se expresa como una delgada sombra gris en torno a la **<span style="color: #E64833;">l√≠nea rojiza</span>** del modelo log√≠stico, denotando que cabe poca duda que los par√°metros del modelo se ajusten a la hip√≥tesis propuesta.

Y as√≠, con una sola herramienta, el modelo log√≠stico, podemos hacer predicciones para saber qu√© razas ganar√°n este o cualquier otro torneo. 

## Conclusi√≥n

En general, las simulaciones son fieles al dise√±o de torneo y de enfrentamientos entre razas, es decir, hab√≠a mucho faerie, tit√°n y ol√≠mpico, por tanto, estas son las razas con mayor probabilidad de ganar. Incluso m√°s interesante ser√≠a correr las mismas simulaciones pero teniendo en consideraci√≥n los enfrentamientos favorables y desfavorables entre las 12 razas, algo que espero poder conseguir con un dataset m√°s completo.

